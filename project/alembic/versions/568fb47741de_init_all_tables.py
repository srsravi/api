"""INIT All TABLES

Revision ID: 568fb47741de
Revises: 
Create Date: 2024-11-02 19:49:54.477740

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '568fb47741de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('md_countries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shortName', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('phoneCode', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('currencySymbol', sa.String(length=100), nullable=True),
    sa.Column('currencyCode', sa.String(length=100), nullable=True),
    sa.Column('zipcodeLength', sa.Integer(), nullable=True),
    sa.Column('allowNumAndCharInZipcode', sa.String(length=100), nullable=True),
    sa.Column('mapName', sa.String(length=100), nullable=True),
    sa.Column('currency_name', sa.String(length=100), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_income_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_lead_sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_loan_application_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('stateId', sa.Integer(), nullable=True),
    sa.Column('countryId', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_obligation_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_profession_sub_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('profession_type_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_profession_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_reminder_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_service_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('mapName', sa.String(length=100), nullable=True),
    sa.Column('countryId', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_task_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_tenant_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_timezones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('zone', sa.String(length=55), nullable=True),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_user_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_md_user_roles_name'), 'md_user_roles', ['name'], unique=False)
    op.create_table('md_user_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference', sa.String(length=150), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_user_id'), 'tickets', ['user_id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ref_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('catrgory', sa.String(length=150), nullable=False),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tfs_id', sa.String(length=30), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('login_token', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True, comment='User Login count'),
    sa.Column('login_fail_count', sa.Integer(), nullable=True, comment='User Login Fail count'),
    sa.Column('login_attempt_date', sa.DateTime(), nullable=True, comment='Last Login Attempt date'),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_by_role', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['md_user_roles.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_tenant_id'), 'admin', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_admin_tfs_id'), 'admin', ['tfs_id'], unique=True)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tfs_id', sa.String(length=30), nullable=True),
    sa.Column('referer_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('alternate_mobile_no', sa.String(length=15), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True, comment='User Login count'),
    sa.Column('login_fail_count', sa.Integer(), nullable=True, comment='User Login Fail count'),
    sa.Column('login_attempt_date', sa.DateTime(), nullable=True, comment='Last Login Attempt date'),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('service_type_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('accepted_terms', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['md_user_roles.id'], ),
    sa.ForeignKeyConstraint(['service_type_id'], ['md_service_types.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customers_tenant_id'), 'customers', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_customers_tfs_id'), 'customers', ['tfs_id'], unique=True)
    op.create_table('admin_notificatuions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('status_category', sa.String(length=50), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_notificatuions_admin_id'), 'admin_notificatuions', ['admin_id'], unique=False)
    op.create_index(op.f('ix_admin_notificatuions_user_id'), 'admin_notificatuions', ['user_id'], unique=False)
    op.create_table('application_details',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subscriber_id', sa.Integer(), nullable=True),
    sa.Column('application_form_id', sa.String(length=20), nullable=True),
    sa.Column('loan_amount', sa.Float(), nullable=False),
    sa.Column('lead_sourse_id', sa.Integer(), nullable=True),
    sa.Column('profession_type_id', sa.Integer(), nullable=True),
    sa.Column('profession_sub_type_id', sa.Integer(), nullable=True),
    sa.Column('company_name', sa.String(length=55), nullable=True),
    sa.Column('designation', sa.String(length=55), nullable=True),
    sa.Column('total_experience', sa.Float(), nullable=True, comment='Total work experience in years (e.g., 1.5 for one and a half years)'),
    sa.Column('present_organization_years', sa.Integer(), nullable=True),
    sa.Column('work_location', sa.String(length=55), nullable=True),
    sa.Column('gross_salary', sa.Float(), nullable=True, comment='gross salary'),
    sa.Column('net_salary', sa.Float(), nullable=True, comment='net salary'),
    sa.Column('other_income', sa.Text(), nullable=True, comment="JSON stringified list of income sources, e.g., [{'income_type':'job','income':20},{'income_type':'rental','income':10}]"),
    sa.Column('obligations_per_month', sa.Integer(), nullable=True),
    sa.Column('number_of_years', sa.Float(), nullable=True),
    sa.Column('location', sa.String(length=55), nullable=True),
    sa.Column('last_turnover_year', sa.String(length=55), nullable=True),
    sa.Column('last_year_turnover_amount', sa.Float(), nullable=True),
    sa.Column('last_year_itr', sa.Float(), nullable=True),
    sa.Column('current_turnover_year', sa.String(length=55), nullable=True),
    sa.Column('current_year_turnover_amount', sa.Float(), nullable=True),
    sa.Column('current_year_itr', sa.Float(), nullable=True),
    sa.Column('avg_income_per_month', sa.Float(), nullable=True),
    sa.Column('obligation', sa.Boolean(), nullable=True),
    sa.Column('other_obligation', sa.Text(), nullable=True, comment='Optional details of other financial obligations as a JSON stringified list of dictionaries.'),
    sa.Column('income_type_id', sa.Integer(), nullable=True),
    sa.Column('all_obligations', sa.Text(), nullable=True),
    sa.Column('total_obligation_amount_per_month', sa.Float(), nullable=True),
    sa.Column('coapplicant_data', sa.Text(), nullable=True, comment='Json Stringify data'),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('salesman_id', sa.Integer(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('loan_approved_by', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['income_type_id'], ['md_income_types.id'], ),
    sa.ForeignKeyConstraint(['lead_sourse_id'], ['md_lead_sources.id'], ),
    sa.ForeignKeyConstraint(['profession_sub_type_id'], ['md_profession_sub_types.id'], ),
    sa.ForeignKeyConstraint(['profession_type_id'], ['md_profession_types.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_loan_application_status.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['customers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'loan_amount')
    )
    op.create_index(op.f('ix_application_details_lead_sourse_id'), 'application_details', ['lead_sourse_id'], unique=False)
    op.create_index(op.f('ix_application_details_subscriber_id'), 'application_details', ['subscriber_id'], unique=False)
    op.create_table('user_notificatuions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('status_category', sa.String(length=50), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_notificatuions_user_id'), 'user_notificatuions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_notificatuions_user_id'), table_name='user_notificatuions')
    op.drop_table('user_notificatuions')
    op.drop_index(op.f('ix_application_details_subscriber_id'), table_name='application_details')
    op.drop_index(op.f('ix_application_details_lead_sourse_id'), table_name='application_details')
    op.drop_table('application_details')
    op.drop_index(op.f('ix_admin_notificatuions_user_id'), table_name='admin_notificatuions')
    op.drop_index(op.f('ix_admin_notificatuions_admin_id'), table_name='admin_notificatuions')
    op.drop_table('admin_notificatuions')
    op.drop_index(op.f('ix_customers_tfs_id'), table_name='customers')
    op.drop_index(op.f('ix_customers_tenant_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_admin_tfs_id'), table_name='admin')
    op.drop_index(op.f('ix_admin_tenant_id'), table_name='admin')
    op.drop_table('admin')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_tickets_user_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_table('tenants')
    op.drop_table('md_user_status')
    op.drop_index(op.f('ix_md_user_roles_name'), table_name='md_user_roles')
    op.drop_table('md_user_roles')
    op.drop_table('md_timezones')
    op.drop_table('md_tenant_status')
    op.drop_table('md_task_status')
    op.drop_table('md_states')
    op.drop_table('md_service_types')
    op.drop_table('md_reminder_status')
    op.drop_table('md_profession_types')
    op.drop_table('md_profession_sub_types')
    op.drop_table('md_obligation_types')
    op.drop_table('md_locations')
    op.drop_table('md_loan_application_status')
    op.drop_table('md_lead_sources')
    op.drop_table('md_income_types')
    op.drop_table('md_countries')
    # ### end Alembic commands ###
